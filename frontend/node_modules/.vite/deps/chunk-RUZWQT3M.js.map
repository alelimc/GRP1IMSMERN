{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/Typography/Typography.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport capitalize from '../utils/capitalize';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      margin: 0\r\n    },\r\n\r\n    /* Styles applied to the root element if `variant=\"body2\"`. */\r\n    body2: theme.typography.body2,\r\n\r\n    /* Styles applied to the root element if `variant=\"body1\"`. */\r\n    body1: theme.typography.body1,\r\n\r\n    /* Styles applied to the root element if `variant=\"caption\"`. */\r\n    caption: theme.typography.caption,\r\n\r\n    /* Styles applied to the root element if `variant=\"button\"`. */\r\n    button: theme.typography.button,\r\n\r\n    /* Styles applied to the root element if `variant=\"h1\"`. */\r\n    h1: theme.typography.h1,\r\n\r\n    /* Styles applied to the root element if `variant=\"h2\"`. */\r\n    h2: theme.typography.h2,\r\n\r\n    /* Styles applied to the root element if `variant=\"h3\"`. */\r\n    h3: theme.typography.h3,\r\n\r\n    /* Styles applied to the root element if `variant=\"h4\"`. */\r\n    h4: theme.typography.h4,\r\n\r\n    /* Styles applied to the root element if `variant=\"h5\"`. */\r\n    h5: theme.typography.h5,\r\n\r\n    /* Styles applied to the root element if `variant=\"h6\"`. */\r\n    h6: theme.typography.h6,\r\n\r\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\r\n    subtitle1: theme.typography.subtitle1,\r\n\r\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\r\n    subtitle2: theme.typography.subtitle2,\r\n\r\n    /* Styles applied to the root element if `variant=\"overline\"`. */\r\n    overline: theme.typography.overline,\r\n\r\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\r\n    srOnly: {\r\n      position: 'absolute',\r\n      height: 1,\r\n      width: 1,\r\n      overflow: 'hidden'\r\n    },\r\n\r\n    /* Styles applied to the root element if `align=\"left\"`. */\r\n    alignLeft: {\r\n      textAlign: 'left'\r\n    },\r\n\r\n    /* Styles applied to the root element if `align=\"center\"`. */\r\n    alignCenter: {\r\n      textAlign: 'center'\r\n    },\r\n\r\n    /* Styles applied to the root element if `align=\"right\"`. */\r\n    alignRight: {\r\n      textAlign: 'right'\r\n    },\r\n\r\n    /* Styles applied to the root element if `align=\"justify\"`. */\r\n    alignJustify: {\r\n      textAlign: 'justify'\r\n    },\r\n\r\n    /* Styles applied to the root element if `nowrap={true}`. */\r\n    noWrap: {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap'\r\n    },\r\n\r\n    /* Styles applied to the root element if `gutterBottom={true}`. */\r\n    gutterBottom: {\r\n      marginBottom: '0.35em'\r\n    },\r\n\r\n    /* Styles applied to the root element if `paragraph={true}`. */\r\n    paragraph: {\r\n      marginBottom: 16\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"inherit\"`. */\r\n    colorInherit: {\r\n      color: 'inherit'\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"primary\"`. */\r\n    colorPrimary: {\r\n      color: theme.palette.primary.main\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"secondary\"`. */\r\n    colorSecondary: {\r\n      color: theme.palette.secondary.main\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\r\n    colorTextPrimary: {\r\n      color: theme.palette.text.primary\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\r\n    colorTextSecondary: {\r\n      color: theme.palette.text.secondary\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"error\"`. */\r\n    colorError: {\r\n      color: theme.palette.error.main\r\n    },\r\n\r\n    /* Styles applied to the root element if `display=\"inline\"`. */\r\n    displayInline: {\r\n      display: 'inline'\r\n    },\r\n\r\n    /* Styles applied to the root element if `display=\"block\"`. */\r\n    displayBlock: {\r\n      display: 'block'\r\n    }\r\n  };\r\n};\r\nvar defaultVariantMapping = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  subtitle1: 'h6',\r\n  subtitle2: 'h6',\r\n  body1: 'p',\r\n  body2: 'p'\r\n};\r\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\r\n  var _props$align = props.align,\r\n      align = _props$align === void 0 ? 'inherit' : _props$align,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$color = props.color,\r\n      color = _props$color === void 0 ? 'initial' : _props$color,\r\n      component = props.component,\r\n      _props$display = props.display,\r\n      display = _props$display === void 0 ? 'initial' : _props$display,\r\n      _props$gutterBottom = props.gutterBottom,\r\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\r\n      _props$noWrap = props.noWrap,\r\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\r\n      _props$paragraph = props.paragraph,\r\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\r\n      _props$variantMapping = props.variantMapping,\r\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\r\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\r\n\r\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\r\n  /**\r\n   * Set the text-align on the component.\r\n   */\r\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\r\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   * Overrides the behavior of the `variantMapping` prop.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Controls the display type\r\n   */\r\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\r\n\r\n  /**\r\n   * If `true`, the text will have a bottom margin.\r\n   */\r\n  gutterBottom: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\r\n   *\r\n   * Note that text overflow can only happen with block or inline-block level elements\r\n   * (the element needs to have a width in order to overflow).\r\n   */\r\n  noWrap: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the text will have a bottom margin.\r\n   */\r\n  paragraph: PropTypes.bool,\r\n\r\n  /**\r\n   * Applies the theme typography styles.\r\n   */\r\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\r\n\r\n  /**\r\n   * The component maps the variant prop to a range of different HTML element types.\r\n   * For instance, subtitle1 to `<h6>`.\r\n   * If you wish to change that mapping, you can provide your own.\r\n   * Alternatively, you can use the `component` prop.\r\n   */\r\n  variantMapping: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiTypography'\r\n})(Typography);"],
  "mappings": "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",
  "names": ["styles", "Typography", "PropTypes"]
}
