{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/SvgIcon/SvgIcon.js", "../../@material-ui/core/esm/SvgIcon/index.js", "../../@material-ui/core/esm/utils/createSvgIcon.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { chainPropTypes } from '@material-ui/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport capitalize from '../utils/capitalize';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      userSelect: 'none',\r\n      width: '1em',\r\n      height: '1em',\r\n      display: 'inline-block',\r\n      fill: 'currentColor',\r\n      flexShrink: 0,\r\n      fontSize: theme.typography.pxToRem(24),\r\n      transition: theme.transitions.create('fill', {\r\n        duration: theme.transitions.duration.shorter\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"primary\"`. */\r\n    colorPrimary: {\r\n      color: theme.palette.primary.main\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"secondary\"`. */\r\n    colorSecondary: {\r\n      color: theme.palette.secondary.main\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"action\"`. */\r\n    colorAction: {\r\n      color: theme.palette.action.active\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"error\"`. */\r\n    colorError: {\r\n      color: theme.palette.error.main\r\n    },\r\n\r\n    /* Styles applied to the root element if `color=\"disabled\"`. */\r\n    colorDisabled: {\r\n      color: theme.palette.action.disabled\r\n    },\r\n\r\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\r\n    fontSizeInherit: {\r\n      fontSize: 'inherit'\r\n    },\r\n\r\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\r\n    fontSizeSmall: {\r\n      fontSize: theme.typography.pxToRem(20)\r\n    },\r\n\r\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\r\n    fontSizeLarge: {\r\n      fontSize: theme.typography.pxToRem(35)\r\n    }\r\n  };\r\n};\r\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$color = props.color,\r\n      color = _props$color === void 0 ? 'inherit' : _props$color,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'svg' : _props$component,\r\n      _props$fontSize = props.fontSize,\r\n      fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,\r\n      htmlColor = props.htmlColor,\r\n      titleAccess = props.titleAccess,\r\n      _props$viewBox = props.viewBox,\r\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && fontSize !== 'medium' && classes[\"fontSize\".concat(capitalize(fontSize))]),\r\n    focusable: \"false\",\r\n    viewBox: viewBox,\r\n    color: htmlColor,\r\n    \"aria-hidden\": titleAccess ? undefined : true,\r\n    role: titleAccess ? 'img' : undefined,\r\n    ref: ref\r\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Node passed into the SVG element.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\r\n   */\r\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\r\n   */\r\n  fontSize: chainPropTypes(PropTypes.oneOf(['default', 'inherit', 'large', 'medium', 'small']), function (props) {\r\n    var fontSize = props.fontSize;\r\n\r\n    if (fontSize === 'default') {\r\n      throw new Error('Material-UI: `fontSize=\"default\"` is deprecated. Use `fontSize=\"medium\"` instead.');\r\n    }\r\n\r\n    return null;\r\n  }),\r\n\r\n  /**\r\n   * Applies a color attribute to the SVG element.\r\n   */\r\n  htmlColor: PropTypes.string,\r\n\r\n  /**\r\n   * The shape-rendering attribute. The behavior of the different options is described on the\r\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\r\n   * If you are having issues with blurry icons you should investigate this property.\r\n   */\r\n  shapeRendering: PropTypes.string,\r\n\r\n  /**\r\n   * Provides a human-readable title for the element that contains it.\r\n   * https://www.w3.org/TR/SVG-access/#Equivalent\r\n   */\r\n  titleAccess: PropTypes.string,\r\n\r\n  /**\r\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\r\n   * For example, if the SVG element is 500 (width) by 200 (height),\r\n   * and you pass viewBox=\"0 0 50 20\",\r\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\r\n   * to bottom right (50,20) and each unit will be worth 10px.\r\n   */\r\n  viewBox: PropTypes.string\r\n} : void 0;\r\nSvgIcon.muiName = 'SvgIcon';\r\nexport default withStyles(styles, {\r\n  name: 'MuiSvgIcon'\r\n})(SvgIcon);", "export { default } from './SvgIcon';", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport React from 'react';\r\nimport SvgIcon from '../SvgIcon';\r\n/**\r\n * Private module reserved for @material-ui/x packages.\r\n */\r\n\r\nexport default function createSvgIcon(path, displayName) {\r\n  var Component = function Component(props, ref) {\r\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\r\n      ref: ref\r\n    }, props), path);\r\n  };\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // Need to set `displayName` on the inner component for React.memo.\r\n    // React prior to 16.14 ignores `displayName` on the wrapper.\r\n    Component.displayName = \"\".concat(displayName, \"Icon\");\r\n  }\r\n\r\n  Component.muiName = SvgIcon.muiName;\r\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\r\n}"],
  "mappings": "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",
  "names": ["styles", "SvgIcon", "PropTypes", "init_SvgIcon", "Component", "React", "init_SvgIcon"]
}
